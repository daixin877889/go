// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 用户列表请求数据
type UserRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserName             string   `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`
	NickName             string   `protobuf:"bytes,6,opt,name=nickName,proto3" json:"nickName,omitempty"`
	RealName             string   `protobuf:"bytes,7,opt,name=realName,proto3" json:"realName,omitempty"`
	Phone                string   `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca47c89e84f91d88, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UserRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserRequest) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserRequest) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *UserRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 用户信息返回数据
type UserDataReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Id                   int32    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            string   `protobuf:"bytes,6,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Uuid                 string   `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserName             string   `protobuf:"bytes,8,opt,name=userName,proto3" json:"userName,omitempty"`
	Phone                string   `protobuf:"bytes,9,opt,name=Phone,json=phone,proto3" json:"Phone,omitempty"`
	NickName             string   `protobuf:"bytes,10,opt,name=nickName,proto3" json:"nickName,omitempty"`
	RealName             string   `protobuf:"bytes,11,opt,name=realName,proto3" json:"realName,omitempty"`
	Status               int32    `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDataReply) Reset()         { *m = UserDataReply{} }
func (m *UserDataReply) String() string { return proto.CompactTextString(m) }
func (*UserDataReply) ProtoMessage()    {}
func (*UserDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca47c89e84f91d88, []int{1}
}

func (m *UserDataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDataReply.Unmarshal(m, b)
}
func (m *UserDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDataReply.Marshal(b, m, deterministic)
}
func (m *UserDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDataReply.Merge(m, src)
}
func (m *UserDataReply) XXX_Size() int {
	return xxx_messageInfo_UserDataReply.Size(m)
}
func (m *UserDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserDataReply proto.InternalMessageInfo

func (m *UserDataReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserDataReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UserDataReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserDataReply) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *UserDataReply) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *UserDataReply) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func (m *UserDataReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UserDataReply) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserDataReply) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserDataReply) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserDataReply) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *UserDataReply) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 用户列表返回数据
type UserListReply struct {
	UserList             []*UserDataReply `protobuf:"bytes,1,rep,name=userList,proto3" json:"userList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UserListReply) Reset()         { *m = UserListReply{} }
func (m *UserListReply) String() string { return proto.CompactTextString(m) }
func (*UserListReply) ProtoMessage()    {}
func (*UserListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca47c89e84f91d88, []int{2}
}

func (m *UserListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListReply.Unmarshal(m, b)
}
func (m *UserListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListReply.Marshal(b, m, deterministic)
}
func (m *UserListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListReply.Merge(m, src)
}
func (m *UserListReply) XXX_Size() int {
	return xxx_messageInfo_UserListReply.Size(m)
}
func (m *UserListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserListReply proto.InternalMessageInfo

func (m *UserListReply) GetUserList() []*UserDataReply {
	if m != nil {
		return m.UserList
	}
	return nil
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "user.UserRequest")
	proto.RegisterType((*UserDataReply)(nil), "user.UserDataReply")
	proto.RegisterType((*UserListReply)(nil), "user.userListReply")
}

func init() { proto.RegisterFile("grpc/proto/user/user.proto", fileDescriptor_ca47c89e84f91d88) }

var fileDescriptor_ca47c89e84f91d88 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x6f, 0x5b, 0x0a, 0x74, 0x7a, 0xb9, 0xb9, 0x8e, 0xc4, 0x4c, 0x88, 0x0b, 0xc2, 0x8a,
	0x15, 0x24, 0xb8, 0x70, 0x67, 0xfc, 0x17, 0x8d, 0x89, 0x51, 0xd3, 0xc8, 0x03, 0xd4, 0xce, 0x09,
	0x36, 0x02, 0xad, 0x9d, 0xe9, 0x02, 0xdf, 0xcb, 0xa7, 0xf1, 0x65, 0xcc, 0x39, 0x53, 0x5a, 0x4a,
	0xc0, 0xb8, 0x21, 0xe7, 0xfb, 0xbe, 0xe6, 0xcc, 0x7c, 0xbf, 0x0c, 0xac, 0x37, 0xcb, 0xd2, 0x68,
	0x9c, 0x66, 0x89, 0x4e, 0xc6, 0xb9, 0x82, 0x8c, 0x7e, 0x46, 0xa4, 0x79, 0x03, 0xe7, 0xc1, 0x97,
	0xc5, 0xfc, 0xa9, 0x82, 0x2c, 0x80, 0xf7, 0x1c, 0x94, 0xe6, 0xff, 0x98, 0x1d, 0x4b, 0x61, 0xf5,
	0xad, 0xa1, 0x1b, 0xd8, 0xb1, 0xe4, 0x9c, 0x35, 0xd2, 0x70, 0x06, 0xc2, 0x26, 0x87, 0x66, 0xf4,
	0x54, 0xfc, 0x01, 0xc2, 0x31, 0x1e, 0xce, 0xe8, 0xe5, 0x79, 0x2c, 0x45, 0xa3, 0x6f, 0x0d, 0xbd,
	0x80, 0x66, 0xde, 0x63, 0x6d, 0x3c, 0xe3, 0x21, 0x5c, 0x80, 0x70, 0xc9, 0x2f, 0x35, 0x66, 0xcb,
	0x38, 0x7a, 0xa3, 0xac, 0x69, 0xb2, 0xb5, 0xc6, 0x2c, 0x83, 0x70, 0x4e, 0x59, 0xcb, 0x64, 0x6b,
	0xcd, 0xbb, 0xcc, 0x4d, 0x5f, 0x93, 0x25, 0x88, 0x36, 0x05, 0x46, 0xf0, 0x23, 0xd6, 0x54, 0x3a,
	0xd4, 0xb9, 0x12, 0x1e, 0xdd, 0xa9, 0x50, 0x83, 0x4f, 0x9b, 0x75, 0xb0, 0xdd, 0x75, 0xa8, 0xc3,
	0x00, 0xd2, 0xf9, 0x0a, 0xef, 0x19, 0x25, 0x12, 0x8a, 0x86, 0x34, 0xf3, 0xff, 0xcc, 0x59, 0xa8,
	0x19, 0x55, 0xf4, 0x02, 0x1c, 0x0b, 0x0a, 0x4e, 0x49, 0xe1, 0x98, 0x79, 0x51, 0x06, 0xa1, 0x06,
	0x79, 0xa1, 0x8b, 0x8a, 0x95, 0x81, 0x69, 0x9e, 0xca, 0x22, 0x35, 0x45, 0x2b, 0x03, 0x53, 0x09,
	0x73, 0x30, 0xa9, 0xa9, 0x5a, 0x19, 0x25, 0xb7, 0xd6, 0x1e, 0x6e, 0xed, 0x2d, 0x6e, 0x5d, 0xe6,
	0x3e, 0x51, 0x7f, 0x6f, 0xb3, 0xff, 0x26, 0x4d, 0xf6, 0x03, 0x4d, 0x7f, 0x8b, 0x66, 0xc5, 0xed,
	0x6f, 0x8d, 0xdb, 0x39, 0xeb, 0xe0, 0x89, 0xf7, 0xb1, 0xd2, 0x06, 0xdb, 0xd8, 0x5c, 0x09, 0x0d,
	0x61, 0xf5, 0x9d, 0xa1, 0x3f, 0x39, 0x1c, 0xd1, 0x5b, 0xaa, 0xd1, 0x0d, 0xca, 0x8f, 0x26, 0xcf,
	0x8c, 0x5f, 0x11, 0xa0, 0xc7, 0x6c, 0x4a, 0x28, 0xf0, 0x43, 0x7e, 0xb6, 0xd3, 0x3d, 0xa8, 0x56,
	0x15, 0xcf, 0xb0, 0xb7, 0x6b, 0xfb, 0xe0, 0xcf, 0xe4, 0x86, 0xf9, 0xb7, 0xa0, 0xa7, 0xc5, 0x21,
	0xfc, 0xb4, 0x2e, 0xf7, 0xef, 0xa9, 0x95, 0xa9, 0xed, 0xb9, 0x5c, 0xdd, 0xc9, 0x8d, 0x3d, 0x24,
	0x7f, 0x7d, 0x9f, 0x97, 0x26, 0xfd, 0x95, 0x4e, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xc4,
	0x84, 0x80, 0x68, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CreateOrUpdateUserClient is the client API for CreateOrUpdateUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateOrUpdateUserClient interface {
	CreateOrUpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserDataReply, error)
}

type createOrUpdateUserClient struct {
	cc *grpc.ClientConn
}

func NewCreateOrUpdateUserClient(cc *grpc.ClientConn) CreateOrUpdateUserClient {
	return &createOrUpdateUserClient{cc}
}

func (c *createOrUpdateUserClient) CreateOrUpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserDataReply, error) {
	out := new(UserDataReply)
	err := c.cc.Invoke(ctx, "/user.CreateOrUpdateUser/CreateOrUpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateOrUpdateUserServer is the server API for CreateOrUpdateUser service.
type CreateOrUpdateUserServer interface {
	CreateOrUpdateUser(context.Context, *UserRequest) (*UserDataReply, error)
}

// UnimplementedCreateOrUpdateUserServer can be embedded to have forward compatible implementations.
type UnimplementedCreateOrUpdateUserServer struct {
}

func (*UnimplementedCreateOrUpdateUserServer) CreateOrUpdateUser(ctx context.Context, req *UserRequest) (*UserDataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrUpdateUser not implemented")
}

func RegisterCreateOrUpdateUserServer(s *grpc.Server, srv CreateOrUpdateUserServer) {
	s.RegisterService(&_CreateOrUpdateUser_serviceDesc, srv)
}

func _CreateOrUpdateUser_CreateOrUpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateOrUpdateUserServer).CreateOrUpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.CreateOrUpdateUser/CreateOrUpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateOrUpdateUserServer).CreateOrUpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateOrUpdateUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.CreateOrUpdateUser",
	HandlerType: (*CreateOrUpdateUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrUpdateUser",
			Handler:    _CreateOrUpdateUser_CreateOrUpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto/user/user.proto",
}

// GetUserListClient is the client API for GetUserList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetUserListClient interface {
	GetUserList(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserListReply, error)
}

type getUserListClient struct {
	cc *grpc.ClientConn
}

func NewGetUserListClient(cc *grpc.ClientConn) GetUserListClient {
	return &getUserListClient{cc}
}

func (c *getUserListClient) GetUserList(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserListReply, error) {
	out := new(UserListReply)
	err := c.cc.Invoke(ctx, "/user.GetUserList/GetUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetUserListServer is the server API for GetUserList service.
type GetUserListServer interface {
	GetUserList(context.Context, *UserRequest) (*UserListReply, error)
}

// UnimplementedGetUserListServer can be embedded to have forward compatible implementations.
type UnimplementedGetUserListServer struct {
}

func (*UnimplementedGetUserListServer) GetUserList(ctx context.Context, req *UserRequest) (*UserListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserList not implemented")
}

func RegisterGetUserListServer(s *grpc.Server, srv GetUserListServer) {
	s.RegisterService(&_GetUserList_serviceDesc, srv)
}

func _GetUserList_GetUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetUserListServer).GetUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.GetUserList/GetUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetUserListServer).GetUserList(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetUserList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.GetUserList",
	HandlerType: (*GetUserListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserList",
			Handler:    _GetUserList_GetUserList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto/user/user.proto",
}

// GetUserByIdClient is the client API for GetUserById service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetUserByIdClient interface {
	GetUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserDataReply, error)
}

type getUserByIdClient struct {
	cc *grpc.ClientConn
}

func NewGetUserByIdClient(cc *grpc.ClientConn) GetUserByIdClient {
	return &getUserByIdClient{cc}
}

func (c *getUserByIdClient) GetUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserDataReply, error) {
	out := new(UserDataReply)
	err := c.cc.Invoke(ctx, "/user.GetUserById/GetUserById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetUserByIdServer is the server API for GetUserById service.
type GetUserByIdServer interface {
	GetUserById(context.Context, *UserRequest) (*UserDataReply, error)
}

// UnimplementedGetUserByIdServer can be embedded to have forward compatible implementations.
type UnimplementedGetUserByIdServer struct {
}

func (*UnimplementedGetUserByIdServer) GetUserById(ctx context.Context, req *UserRequest) (*UserDataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserById not implemented")
}

func RegisterGetUserByIdServer(s *grpc.Server, srv GetUserByIdServer) {
	s.RegisterService(&_GetUserById_serviceDesc, srv)
}

func _GetUserById_GetUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetUserByIdServer).GetUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.GetUserById/GetUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetUserByIdServer).GetUserById(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetUserById_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.GetUserById",
	HandlerType: (*GetUserByIdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserById",
			Handler:    _GetUserById_GetUserById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto/user/user.proto",
}
